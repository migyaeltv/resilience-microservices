version: "3.8"
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always

    depends_on:
      - order
      - payment

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: orders
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  order:
    build:
      context: ./order-microservice
      dockerfile: Dockerfile
    container_name: order
    depends_on:
      - mysql-db
    ports:
      - "8080:8080"

    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/orders
      - SPRING_DATASOURCE_USERNAME=app_user
      - SPRING_DATASOURCE_PASSWORD=app_password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always

  payment:
    build:
      context: ./payment-microservice
      dockerfile: Dockerfile
    container_name: payment
    ports:
      - "8081:8081"
    environment:
      SERVER_PORT: 8081
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: prometheus
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: true
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      PAYMENT_SERVICE_URL: http://payment:8081

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  mysql-data:
    name: orders-mysql-data
