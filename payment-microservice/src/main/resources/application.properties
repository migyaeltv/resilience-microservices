spring.application.name=payment-microservice
# Puerto del servicio
server.port=8081

# Resilience4j: Configuración del Circuit Breaker
resilience4j.circuitbreaker.instances.paymentService.register-health-indicator=true
resilience4j.circuitbreaker.instances.paymentService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.paymentService.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.paymentService.sliding-window-size=5
resilience4j.circuitbreaker.instances.paymentService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.paymentService.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.paymentService.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.paymentService.automatic-transition-from-open-to-half-open-enabled=true


# Resilience4j: Configuración de Retry
resilience4j.retry.instances.paymentService.max-attempts=3
resilience4j.retry.instances.paymentService.wait-duration=1000
resilience4j.retry.instances.paymentService.retry-exceptions=java.lang.RuntimeException


# Resilience4j: Configuración de Retry con Exponential Backoff
resilience4j.retry.instances.paymentService.exponential-backoff.enabled=true
resilience4j.retry.instances.paymentService.exponential-backoff.multiplier=2
resilience4j.retry.instances.paymentService.exponential-backoff.max-wait-duration=5000


management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

